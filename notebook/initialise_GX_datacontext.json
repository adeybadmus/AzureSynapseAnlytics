{
	"name": "initialise_GX_datacontext",
	"properties": {
		"folder": {
			"name": "test"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SynSalespool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "cbf7a2dc-e99a-4055-a558-0e5b8ff55f81"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/bb83342a-f18f-4eb9-af01-297fab968e48/resourceGroups/firstdf/providers/Microsoft.Synapse/workspaces/asfirstdf/bigDataPools/SynSalespool",
				"name": "SynSalespool",
				"type": "Spark",
				"endpoint": "https://asfirstdf.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SynSalespool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"pip install great_expectations"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"import great_expectations as gx"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Import required Libraries"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from ruamel import yaml\r\n",
					"import datetime\r\n",
					"import os\r\n",
					"from pyspark.sql import SparkSession, DataFrame\r\n",
					"\r\n",
					"\r\n",
					"from great_expectations.core.batch import RuntimeBatchRequest\r\n",
					"from great_expectations.profile.user_configurable_profiler import UserConfigurableProfiler\r\n",
					"from great_expectations.profile.basic_dataset_profiler import BasicDatasetProfiler\r\n",
					"from great_expectations.dataset.sparkdf_dataset import SparkDFDataset\r\n",
					"from great_expectations.render.renderer import *\r\n",
					"from great_expectations.render.view import DefaultJinjaPageView\r\n",
					"from great_expectations.data_context.types.base import DataContextConfig, DatasourceConfig, FilesystemStoreBackendDefaults\r\n",
					"from pyspark.sql.types import StructType, StructField, IntegerType, LongType, TimestampType, DoubleType, BooleanType, NullType, DecimalType, FloatType, ShortType\r\n",
					"from great_expectations.data_context.types.resource_identifiers import ValidationResultIdentifier\r\n",
					"from datetime import datetime\r\n",
					"from great_expectations.data_context.types.base import(\r\n",
					"    DataContextConfig,\r\n",
					"    InMemoryStoreBackendDefaults\r\n",
					")\r\n",
					"from great_expectations.data_context import EphemeralDataContext"
				],
				"execution_count": 13
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# 2. Create Data Context"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"project_config = DataContextConfig(\r\n",
					"    store_backend_defaults=InMemoryStoreBackendDefaults()\r\n",
					")\r\n",
					"ge_context = EphemeralDataContext(project_config=project_config)\r\n",
					"ge_context.build_data_docs()"
				],
				"execution_count": 14
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Connect to Data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run test/read_bronze_data"
				],
				"execution_count": 18
			}
		]
	}
}