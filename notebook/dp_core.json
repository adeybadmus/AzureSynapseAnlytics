{
	"name": "dp_core",
	"properties": {
		"folder": {
			"name": "core"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SynSalespool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "109dd57f-3956-4abe-82c3-9c6e692e9223"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/bb83342a-f18f-4eb9-af01-297fab968e48/resourceGroups/firstdf/providers/Microsoft.Synapse/workspaces/asfirstdf/bigDataPools/SynSalespool",
				"name": "SynSalespool",
				"type": "Spark",
				"endpoint": "https://asfirstdf.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SynSalespool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"import json\r\n",
					"# import jsons\r\n",
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, LongType, TimestampType, DoubleType, BooleanType, NullType, DecimalType, FloatType, ShortType"
				],
				"execution_count": 4
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Mount an ADLS Container"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def mount_adls_container(adlsContainer, mountPath, adlsLinkedService):\r\n",
					"    try:\r\n",
					"        mssparkutils.fs.mount(\r\n",
					"                                 adlsContainer, \r\n",
					"                                 mountPath, \r\n",
					"                                 {\"LinkedService\": f\"{adlsLinkedService}\"}\r\n",
					"            )\r\n",
					"    except:\r\n",
					"            print(f\"{mountPath} already mounted.\")\r\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Get a secret value from Azure KeyVault against a secret key"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def get_kv_secretvalue(kvLinkedService, kvSecretName):\r\n",
					"    return mssparkutils.credentials.getSecretWithLS(kvLinkedService, kvSecretName)"
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Get the contents of data catalog JSON file that forms Sparks StructType and StructFields"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"def get_data_catalog_json_schema(jobid, datagovernance_mount_path, data_catalog):\r\n",
					"    data_catalog_path = f\"synfs:/{jobid}/{datagovernance_mount}/{data_catalog}\"\r\n",
					"    return mssparkutils.fs.head(data_catalog_path)"
				],
				"execution_count": 10
			}
		]
	}
}